@page
@model PrestitoModel
@{
    ViewData["Title"] = "Prestito";
}

<div class="text-center">
    <h1>Books Available</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Genre</th>
                <th>Author</th>
                <th>ISBN</th>
            </tr>
        </thead>
        <tbody id="booksTableBody">
        </tbody>
    </table>
</div>
@section Scripts {
    <script>
        async function loadBooks() {
            const response = await fetch('/api/book/all');

            if (!response.ok) {
                // Se la risposta non è OK (404, 500, ecc.), mostriamo l'errore
                const errorMessage = await response.text(); // Ottieni il testo completo della risposta
                console.error('Errore nella richiesta API:', errorMessage);
                return; // Esci dalla funzione per evitare di cercare di parse un errore come JSON
            }

            const books = await response.json();  // Solo se la risposta è ok, continua con la lettura dei dati JSON

            const tableBody = document.getElementById('booksTableBody');
            tableBody.innerHTML = '';

            books.forEach(book => {
                if (!book.isBooked) {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${book.title}</td>
                        <td>${book.genre}</td>
                        <td>${book.authorCF}</td>
                        <td>${book.isbn}</td>
                    `;
                    tableBody.appendChild(row);
                }
            });
        }

        document.addEventListener('DOMContentLoaded', loadBooks);
    </script>
}
