// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using progettopcto.Data;

#nullable disable

namespace progetto.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250305132559_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("progettopcto.Data.Author", b =>
                {
                    b.Property<string>("CF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CF");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            CF = "CF001",
                            Name = "Mario",
                            Surname = "Rossi"
                        },
                        new
                        {
                            CF = "CF002",
                            Name = "Luigi",
                            Surname = "Verdi"
                        },
                        new
                        {
                            CF = "CF003",
                            Name = "Giovanni",
                            Surname = "Bianchi"
                        },
                        new
                        {
                            CF = "CF004",
                            Name = "Paolo",
                            Surname = "Neri"
                        },
                        new
                        {
                            CF = "CF005",
                            Name = "Francesca",
                            Surname = "Gialli"
                        },
                        new
                        {
                            CF = "CF006",
                            Name = "Anna",
                            Surname = "Blu"
                        },
                        new
                        {
                            CF = "CF007",
                            Name = "Marco",
                            Surname = "Giallo"
                        },
                        new
                        {
                            CF = "CF008",
                            Name = "Luca",
                            Surname = "Viola"
                        },
                        new
                        {
                            CF = "CF009",
                            Name = "Sara",
                            Surname = "Rosa"
                        },
                        new
                        {
                            CF = "CF010",
                            Name = "Elena",
                            Surname = "Marrone"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.Book", b =>
                {
                    b.Property<int>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ISBN"));

                    b.Property<string>("AuthorCF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISBN");

                    b.HasIndex("AuthorCF");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ISBN = 1001,
                            AuthorCF = "CF001",
                            Genre = "Fantasy",
                            IsBooked = false,
                            Title = "Il Signore degli Anelli"
                        },
                        new
                        {
                            ISBN = 1002,
                            AuthorCF = "CF002",
                            Genre = "Fantasy",
                            IsBooked = false,
                            Title = "Harry Potter"
                        },
                        new
                        {
                            ISBN = 1003,
                            AuthorCF = "CF003",
                            Genre = "Thriller",
                            IsBooked = false,
                            Title = "Il Codice Da Vinci"
                        },
                        new
                        {
                            ISBN = 1004,
                            AuthorCF = "CF004",
                            Genre = "Storico",
                            IsBooked = false,
                            Title = "Il Nome della Rosa"
                        },
                        new
                        {
                            ISBN = 1005,
                            AuthorCF = "CF005",
                            Genre = "Classico",
                            IsBooked = false,
                            Title = "La Divina Commedia"
                        },
                        new
                        {
                            ISBN = 1006,
                            AuthorCF = "CF006",
                            Genre = "Distopico",
                            IsBooked = false,
                            Title = "1984"
                        },
                        new
                        {
                            ISBN = 1007,
                            AuthorCF = "CF007",
                            Genre = "Fiaba",
                            IsBooked = false,
                            Title = "Il Piccolo Principe"
                        },
                        new
                        {
                            ISBN = 1008,
                            AuthorCF = "CF008",
                            Genre = "Avventura",
                            IsBooked = false,
                            Title = "Moby Dick"
                        },
                        new
                        {
                            ISBN = 1009,
                            AuthorCF = "CF009",
                            Genre = "Romantico",
                            IsBooked = false,
                            Title = "Orgoglio e Pregiudizio"
                        },
                        new
                        {
                            ISBN = 1010,
                            AuthorCF = "CF010",
                            Genre = "Storico",
                            IsBooked = false,
                            Title = "Guerra e Pace"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookISBN")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN");

                    b.HasIndex("UserCF");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookISBN = 1001,
                            EndDate = new DateTime(2025, 1, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER001"
                        },
                        new
                        {
                            Id = 2,
                            BookISBN = 1002,
                            EndDate = new DateTime(2025, 1, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER002"
                        },
                        new
                        {
                            Id = 3,
                            BookISBN = 1003,
                            EndDate = new DateTime(2025, 1, 13, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 24, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER003"
                        },
                        new
                        {
                            Id = 4,
                            BookISBN = 1004,
                            EndDate = new DateTime(2025, 1, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER004"
                        },
                        new
                        {
                            Id = 5,
                            BookISBN = 1005,
                            EndDate = new DateTime(2025, 1, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 26, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER005"
                        },
                        new
                        {
                            Id = 6,
                            BookISBN = 1006,
                            EndDate = new DateTime(2025, 1, 16, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 27, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER006"
                        },
                        new
                        {
                            Id = 7,
                            BookISBN = 1007,
                            EndDate = new DateTime(2025, 1, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 28, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER007"
                        },
                        new
                        {
                            Id = 8,
                            BookISBN = 1008,
                            EndDate = new DateTime(2025, 1, 18, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 29, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER008"
                        },
                        new
                        {
                            Id = 9,
                            BookISBN = 1009,
                            EndDate = new DateTime(2025, 1, 19, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 30, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER009"
                        },
                        new
                        {
                            Id = 10,
                            BookISBN = 1010,
                            EndDate = new DateTime(2025, 1, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 31, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "USER010"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.User", b =>
                {
                    b.Property<string>("CF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CF");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            CF = "USER001",
                            Address = "anna.rossi@example.com",
                            Name = "Anna",
                            Password = "Password01!",
                            Surname = "Rossi"
                        },
                        new
                        {
                            CF = "USER002",
                            Address = "marco.verdi@example.com",
                            Name = "Marco",
                            Password = "Password01!",
                            Surname = "Verdi"
                        },
                        new
                        {
                            CF = "USER003",
                            Address = "luca.bianchi@example.com",
                            Name = "Luca",
                            Password = "Password01!",
                            Surname = "Bianchi"
                        },
                        new
                        {
                            CF = "USER004",
                            Address = "sara.neri@example.com",
                            Name = "Sara",
                            Password = "Password01!",
                            Surname = "Neri"
                        },
                        new
                        {
                            CF = "USER005",
                            Address = "elena.gialli@example.com",
                            Name = "Elena",
                            Password = "Password01!",
                            Surname = "Gialli"
                        },
                        new
                        {
                            CF = "USER006",
                            Address = "giulia.blu@example.com",
                            Name = "Giulia",
                            Password = "Password01!",
                            Surname = "Blu"
                        },
                        new
                        {
                            CF = "USER007",
                            Address = "davide.giallo@example.com",
                            Name = "Davide",
                            Password = "Password01!",
                            Surname = "Giallo"
                        },
                        new
                        {
                            CF = "USER008",
                            Address = "matteo.viola@example.com",
                            Name = "Matteo",
                            Password = "Password01!",
                            Surname = "Viola"
                        },
                        new
                        {
                            CF = "USER009",
                            Address = "chiara.rosa@example.com",
                            Name = "Chiara",
                            Password = "Password01!",
                            Surname = "Rosa"
                        },
                        new
                        {
                            CF = "USER010",
                            Address = "federico.marrone@example.com",
                            Name = "Federico",
                            Password = "Password01!",
                            Surname = "Marrone"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.Book", b =>
                {
                    b.HasOne("progettopcto.Data.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorCF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("progettopcto.Data.Loan", b =>
                {
                    b.HasOne("progettopcto.Data.Book", "Book")
                        .WithMany("Loans")
                        .HasForeignKey("BookISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("progettopcto.Data.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserCF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("progettopcto.Data.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("progettopcto.Data.Book", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("progettopcto.Data.User", b =>
                {
                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
