// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using progettopcto.Data;

#nullable disable

namespace progetto.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250227164219_seeding")]
    partial class seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("progettopcto.Data.Author", b =>
                {
                    b.Property<string>("CF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CF");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            CF = "A1",
                            Name = "Author1",
                            Surname = "Surname1"
                        },
                        new
                        {
                            CF = "A2",
                            Name = "Author2",
                            Surname = "Surname2"
                        },
                        new
                        {
                            CF = "A3",
                            Name = "Author3",
                            Surname = "Surname3"
                        },
                        new
                        {
                            CF = "A4",
                            Name = "Author4",
                            Surname = "Surname4"
                        },
                        new
                        {
                            CF = "A5",
                            Name = "Author5",
                            Surname = "Surname5"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.Book", b =>
                {
                    b.Property<int>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ISBN"));

                    b.Property<string>("AuthorCF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISBN");

                    b.HasIndex("AuthorCF");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ISBN = 1,
                            AuthorCF = "A1",
                            Genre = "Genre1",
                            Title = "Book1"
                        },
                        new
                        {
                            ISBN = 2,
                            AuthorCF = "A2",
                            Genre = "Genre2",
                            Title = "Book2"
                        },
                        new
                        {
                            ISBN = 3,
                            AuthorCF = "A3",
                            Genre = "Genre3",
                            Title = "Book3"
                        },
                        new
                        {
                            ISBN = 4,
                            AuthorCF = "A4",
                            Genre = "Genre4",
                            Title = "Book4"
                        },
                        new
                        {
                            ISBN = 5,
                            AuthorCF = "A5",
                            Genre = "Genre5",
                            Title = "Book5"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookISBN")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookISBN");

                    b.HasIndex("UserCF");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookISBN = 1,
                            EndDate = new DateTime(2025, 1, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "U1"
                        },
                        new
                        {
                            Id = 2,
                            BookISBN = 2,
                            EndDate = new DateTime(2025, 1, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "U2"
                        },
                        new
                        {
                            Id = 3,
                            BookISBN = 3,
                            EndDate = new DateTime(2025, 1, 13, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 24, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "U3"
                        },
                        new
                        {
                            Id = 4,
                            BookISBN = 4,
                            EndDate = new DateTime(2025, 1, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 25, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "U4"
                        },
                        new
                        {
                            Id = 5,
                            BookISBN = 5,
                            EndDate = new DateTime(2025, 1, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 12, 26, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            UserCF = "U5"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.User", b =>
                {
                    b.Property<string>("CF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CF");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            CF = "U1",
                            Address = "Address1",
                            Name = "User1",
                            Password = "Password01!",
                            Surname = "Surname1"
                        },
                        new
                        {
                            CF = "U2",
                            Address = "Address2",
                            Name = "User2",
                            Password = "Password01!",
                            Surname = "Surname2"
                        },
                        new
                        {
                            CF = "U3",
                            Address = "Address3",
                            Name = "User3",
                            Password = "Password01!",
                            Surname = "Surname3"
                        },
                        new
                        {
                            CF = "U4",
                            Address = "Address4",
                            Name = "User4",
                            Password = "Password01!",
                            Surname = "Surname4"
                        },
                        new
                        {
                            CF = "U5",
                            Address = "Address5",
                            Name = "User5",
                            Password = "Password01!",
                            Surname = "Surname5"
                        });
                });

            modelBuilder.Entity("progettopcto.Data.Book", b =>
                {
                    b.HasOne("progettopcto.Data.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorCF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("progettopcto.Data.Loan", b =>
                {
                    b.HasOne("progettopcto.Data.Book", "Book")
                        .WithMany("Loans")
                        .HasForeignKey("BookISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("progettopcto.Data.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserCF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("progettopcto.Data.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("progettopcto.Data.Book", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("progettopcto.Data.User", b =>
                {
                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
